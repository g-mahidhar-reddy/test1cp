/**
 * @file Firestore Security Rules
 * @description This ruleset is in PROTOTYPING mode and grants all permissions to all users.
 *
 * Core Philosophy: Open access for rapid prototyping.  All reads and writes are allowed.
 *
 * Data Structure:
 * - /users/{userId}:  User profiles, owned by the user.
 * - /users/{userId}/skills/{skillId}: Skills associated with a user, owned by the user.
 * - /users/{userId}/applications/{applicationId}: Internship applications, owned by the user.
 * - /internships/{internshipId}: Internship opportunities, publicly readable.
 * - /mous/{mouId}: Memoranda of Understanding.
 * - /industryUsers/{industryUserId}: Industry user profiles.
 * - /certificates/{certificateId}: Certificates uploaded by users.
 * - /recommendations/{recommendationId}: Recommendations for users.
 * - /feedback/{feedbackId}: User feedback on recommendations.
 *
 * Key Security Decisions:
 * - ALL data is publicly accessible and modifiable during prototyping.
 * - Ownership checks are present but always evaluate to true.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Grants all permissions to all users for User profiles.
     * @path /users/{userId}
     * @allow (create) Any authenticated user can create a profile.
     * @allow (get) Any user can read any profile.
     * @allow (update) Any user can update any profile.
     * @allow (delete) Any user can delete any profile.
     * @deny (none) No requests are denied.
     * @principle Open access for prototyping.
     */
    match /users/{userId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Grants all permissions to all users for User Skills.
     * @path /users/{userId}/skills/{skillId}
     * @allow (create) Any authenticated user can create a skill.
     * @allow (get) Any user can read any skill.
     * @allow (update) Any user can update any skill.
     * @allow (delete) Any user can delete any skill.
     * @deny (none) No requests are denied.
     * @principle Open access for prototyping.
     */
    match /users/{userId}/skills/{skillId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Grants all permissions to all users for User Applications.
     * @path /users/{userId}/applications/{applicationId}
     * @allow (create) Any authenticated user can create an application.
     * @allow (get) Any user can read any application.
     * @allow (update) Any user can update any application.
     * @allow (delete) Any user can delete any application.
     * @deny (none) No requests are denied.
     * @principle Open access for prototyping.
     */
    match /users/{userId}/applications/{applicationId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Grants all permissions to all users for Internships.
     * @path /internships/{internshipId}
     * @allow (create) Any authenticated user can create an internship.
     * @allow (get) Any user can read any internship.
     * @allow (update) Any user can update any internship.
     * @allow (delete) Any user can delete any internship.
     * @deny (none) No requests are denied.
     * @principle Open access for prototyping.
     */
    match /internships/{internshipId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Grants all permissions to all users for MOUs.
     * @path /mous/{mouId}
     * @allow (create) Any authenticated user can create a MOU.
     * @allow (get) Any user can read any MOU.
     * @allow (update) Any user can update any MOU.
     * @allow (delete) Any user can delete any MOU.
     * @deny (none) No requests are denied.
     * @principle Open access for prototyping.
     */
    match /mous/{mouId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Grants all permissions to all users for Industry Users.
     * @path /industryUsers/{industryUserId}
     * @allow (create) Any authenticated user can create a IndustryUser.
     * @allow (get) Any user can read any IndustryUser.
     * @allow (update) Any user can update any IndustryUser.
     * @allow (delete) Any user can delete any IndustryUser.
     * @deny (none) No requests are denied.
     * @principle Open access for prototyping.
     */
    match /industryUsers/{industryUserId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Grants all permissions to all users for Certificates.
     * @path /certificates/{certificateId}
     * @allow (create) Any authenticated user can create a Certificate.
     * @allow (get) Any user can read any Certificate.
     * @allow (update) Any user can update any Certificate.
     * @allow (delete) Any user can delete any Certificate.
     * @deny (none) No requests are denied.
     * @principle Open access for prototyping.
     */
    match /certificates/{certificateId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Grants all permissions to all users for Recommendations.
     * @path /recommendations/{recommendationId}
     * @allow (create) Any authenticated user can create a Recommendation.
     * @allow (get) Any user can read any Recommendation.
     * @allow (update) Any user can update any Recommendation.
     * @allow (delete) Any user can delete any Recommendation.
     * @deny (none) No requests are denied.
     * @principle Open access for prototyping.
     */
    match /recommendations/{recommendationId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }

    /**
     * @description Grants all permissions to all users for Feedback.
     * @path /feedback/{feedbackId}
     * @allow (create) Any authenticated user can create a Feedback.
     * @allow (get) Any user can read any Feedback.
     * @allow (update) Any user can update any Feedback.
     * @allow (delete) Any user can delete any Feedback.
     * @deny (none) No requests are denied.
     * @principle Open access for prototyping.
     */
    match /feedback/{feedbackId} {
      allow get, list: if true;
      allow create, update, delete: if true;
    }
  }
}