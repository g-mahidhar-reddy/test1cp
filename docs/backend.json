
{
  "entities": {
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user of the PrashikshanConnect platform.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user entity."
        },
        "email": {
          "type": "string",
          "description": "Email address of the user.",
          "format": "email"
        },
        "role": {
          "type": "string",
          "description": "Role of the user (student, faculty, industry)."
        },
        "name": {
          "type": "string",
          "description": "Full name of the user."
        },
        "profilePicture": {
          "type": "string",
          "description": "URL to the user's profile picture.",
          "format": "uri"
        },
        "resumeUrl": {
          "type": "string",
          "description": "URL to the user's resume stored in Firebase Storage.",
          "format": "uri"
        },
        "settings": {
          "type": "string",
          "description": "User-specific settings stored as a JSON string."
        }
      },
      "required": [
        "id",
        "email",
        "role",
        "name"
      ]
    },
    "Skill": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Skill",
      "type": "object",
      "description": "Represents a skill that can be associated with a user.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of the skill."
        },
        "level": {
          "type": "string",
          "description": "The user's proficiency level in the skill (e.g., Beginner, Intermediate, Expert)."
        },
        "type": {
          "type": "string",
          "description": "The category of the skill (e.g., Programming, Design)."
        }
      },
      "required": ["name"]
    },
    "Internship": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Internship",
      "type": "object",
      "description": "Represents an internship opportunity.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the internship."
        },
        "title": {
          "type": "string",
          "description": "Title of the internship."
        },
        "company": {
          "type": "string",
          "description": "Name of the company offering the internship."
        },
        "verified": {
          "type": "boolean",
          "description": "Indicates whether the internship is verified."
        },
        "duration": {
          "type": "string",
          "description": "Duration of the internship (e.g., '3 months')."
        },
        "credits": {
          "type": "number",
          "description": "Number of credits awarded for completing the internship."
        },
        "description": {
          "type": "string",
          "description": "Detailed description of the internship."
        },
        "industryUserId": {
          "type": "string",
          "description": "Reference to Industry User. (Relationship: IndustryUser 1:N Internship)"
        }
      },
      "required": [
        "id",
        "title",
        "company",
        "verified",
        "duration",
        "credits",
        "description",
        "industryUserId"
      ]
    },
    "Application": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Application",
      "type": "object",
      "description": "Represents a student's application for an internship.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the application."
        },
        "studentId": {
          "type": "string",
          "description": "Reference to Student. (Relationship: Student 1:N Application)"
        },
        "internshipId": {
          "type": "string",
          "description": "Reference to Internship. (Relationship: Internship 1:N Application)"
        },
        "status": {
          "type": "string",
          "description": "Status of the application (e.g., 'applied', 'accepted', 'rejected', 'completed')."
        },
        "feedback": {
          "type": "string",
          "description": "Feedback provided on the application."
        }
      },
      "required": [
        "id",
        "studentId",
        "internshipId",
        "status"
      ]
    },
    "Mou": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Mou",
      "type": "object",
      "description": "Represents a Memorandum of Understanding (MoU) between a college and a company.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the MoU."
        },
        "college": {
          "type": "string",
          "description": "Name of the college."
        },
        "company": {
          "type": "string",
          "description": "Name of the company."
        },
        "validTill": {
          "type": "string",
          "description": "Date until which the MoU is valid.",
          "format": "date-time"
        },
        "documentUrl": {
          "type": "string",
          "description": "URL to the MoU document stored in Firebase Storage.",
          "format": "uri"
        }
      },
      "required": [
        "id",
        "college",
        "company",
        "validTill"
      ]
    },
    "IndustryUser": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "IndustryUser",
      "type": "object",
      "description": "Represents an industry user who can post and manage internships.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the industry user entity."
        },
        "userId": {
          "type": "string",
          "description": "Reference to the user. (Relationship: User 1:1 IndustryUser)"
        },
        "companyName": {
          "type": "string",
          "description": "Name of the company the industry user represents."
        }
      },
      "required": [
        "id",
        "userId",
        "companyName"
      ]
    },
    "Certificate": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Certificate",
      "type": "object",
      "description": "Represents a certificate uploaded by a user.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the certificate."
        },
        "userId": {
          "type": "string",
          "description": "The ID of the user who owns this certificate."
        },
        "certificateName": {
          "type": "string",
          "description": "The name of the certificate file."
        },
        "fileUrl": {
          "type": "string",
          "description": "URL to the certificate file in Firebase Storage.",
          "format": "uri"
        },
        "uploadedAt": {
          "type": "string",
          "description": "The timestamp when the certificate was uploaded.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "userId",
        "certificateName",
        "fileUrl",
        "uploadedAt"
      ]
    },
    "Recommendation": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Recommendation",
      "type": "object",
      "description": "Represents a recommendation for an internship, skill, or mentor.",
      "properties": {
        "id": { "type": "string" },
        "userId": { "type": "string" },
        "type": { "type": "string", "enum": ["internship", "skill", "mentor"] },
        "recommendationId": { "type": "string" },
        "reason": { "type": "string" },
        "status": { "type": "string", "enum": ["pending", "accepted", "ignored"] }
      },
      "required": ["id", "userId", "type", "recommendationId", "status"]
    },
    "Feedback": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Feedback",
      "type": "object",
      "description": "Represents user feedback on a recommendation.",
      "properties": {
        "id": { "type": "string" },
        "recommendationId": { "type": "string" },
        "userId": { "type": "string" },
        "rating": { "type": "number" },
        "comment": { "type": "string" }
      },
      "required": ["id", "recommendationId", "userId"]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "users/{userId}": {
      "schema": { "$ref": "#/entities/User" },
      "description": "Stores user profiles. Path-based ownership for private user data."
    },
    "users/{userId}/skills/{skillId}": {
      "schema": { "$ref": "#/entities/Skill" },
      "description": "Stores user's skills. Path-based ownership for private user data."
    },
    "users/{userId}/applications/{applicationId}": {
      "schema": { "$ref": "#/entities/Application" },
      "description": "Stores applications for each user. Path-based ownership, only the user and admins can access."
    },
    "internships/{internshipId}": {
      "schema": { "$ref": "#/entities/Internship" },
      "description": "Stores all internship opportunities. Accessible to all users for browsing."
    },
    "mous/{mouId}": {
      "schema": { "$ref": "#/entities/Mou" },
      "description": "Stores Memorandum of Understanding (MoU) documents. Access will be controlled based on roles."
    },
    "industryUsers/{industryUserId}": {
      "schema": { "$ref": "#/entities/IndustryUser" },
      "description": "Stores industry user profiles. Accessible to admins and the specific industry user."
    },
    "certificates/{certificateId}": {
      "schema": { "$ref": "#/entities/Certificate" },
      "description": "Stores metadata for user-uploaded certificates."
    },
    "recommendations/{recommendationId}": {
      "schema": { "$ref": "#/entities/Recommendation" },
      "description": "Stores recommendations for users."
    },
    "feedback/{feedbackId}": {
      "schema": { "$ref": "#/entities/Feedback" },
      "description": "Stores user feedback on recommendations."
    }
  }
}
